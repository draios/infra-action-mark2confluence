# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task -l
    silent: true

  check:
    desc: "Run pre-commit hooks"
    cmds:
      - pre-commit run -a

  virtualenv:
    cmds:
      - python3 -m venv .venv
    sources:
      - .venv/bin/activate
    generates:
      - .venv/bin/activate
    method: checksum

  pre-commit:
    cmds:
      - pre-commit install
    sources:
      - .git/hooks/pre-commit
      - .pre-commit-config.yaml
    generates:
      - .git/hooks/pre-commit
    method: checksum

  pre-commit-setup:
    cmds:
      - pip3 install pre-commit
    status:
      - which pre-commit

  install-poetry:
    desc: "Install Poetry and dependencies from requirements.txt"
    status:
      - which poetry
    cmds:
      - echo "Installing Poetry..."
      - curl -sSL https://install.python-poetry.org | python3 -
      - echo "Installing dependencies from requirements.txt..."
      - poetry install --no-root
      - |
        while read -r line; do
          if [ -n "$line" ] && [ "${line:0:1}" != "#" ]; then
            poetry add "$line"
          fi
        done < requirements.txt

  install-pipenv:
    desc: "Install Pipenv and dependencies from requirements.txt"
    status:
      - which pipenv
    cmds:
      - echo "Installing Pipenv..."
      - pip install pipenv
      - echo "Installing dependencies from requirements.txt..."
      - pipenv install -r requirements.txt

  sync-poetry:
    desc: "Update Poetry dependencies from requirements.txt"
    sources:
      - requirements.txt
    generates:
      - poetry.lock
    method: checksum
    cmds:
      - |
        while read -r line; do
          if [ -n "$line" ] && [ "${line:0:1}" != "#" ]; then
            poetry add "$line"
          fi
        done < requirements.txt

  sync-pipenv:
    desc: "Update Pipenv dependencies from requirements.txt"
    sources:
      - requirements.txt
    generates:
      - Pipfile.lock
    method: checksum
    cmds:
      - pipenv install -r requirements.txt

  dependency-install:
    cmds:
      - .venv/bin/pip3 install -r requirements.txt
    sources:
      - requirements.txt
    method: checksum

  setup:
    desc: Bootstrap dev environment
    preconditions:
      - sh: "[ $(python3 --version | cut -d ' ' -f 2 | awk -F'.' '{print ($2 >= 12) }') = 1 ]"
        msg: "Required python version not found (>=3.12)"
    cmds:
      - task: pre-commit-setup
      - task: virtualenv
      - task: pre-commit
      - task: dependency-install

  test:
    desc: Run tests
    cmds:
      - task: setup
      - .venv/bin/pytest -v .

  clean:
    desc: Cleanup
    cmds:
      - rm -rf ./dist

  reset:
      desc: Reset dev environment
      cmds:
        - rm -rf .venv .task
